Name :
Roll No. :

Assignment No. 10
Title :Inter-process Communication using Shared Memory using System. Application to demonstrate: 
Client and Server Programs in which server process creates a shared memory segment
and writes the message to the shared memory segment.Client process reads the message from the 
shared memory segment and displays it to the screen.


************** Read.cpp ***************

#include <iostream>
#include <stdio.h>
#include <sys/ipc.h>
#include <sys/shm.h>
using namespace std;
 
int main()
{
    // ftok to generate unique key
    key_t key = ftok("shmfile", 65);
 
    // shmget returns an identifier in shmid
    int shmid = shmget(key, 1024, 0666 | IPC_CREAT);
 
    // shmat to attach to shared memory
    char* str = (char*)shmat(shmid, (void*)0, 0);
 
    cout << "Data read from memory:" << str;
 
    // detach from shared memory
    shmdt(str);
 
    // destroy the shared memory
    shmctl(shmid, IPC_RMID, NULL);
 
    return 0;
}

************* Write.cpp ****************

#include <iostream>
#include <stdio.h>
#include <sys/ipc.h>
#include <sys/shm.h>
using namespace std;
 
int main()
{
    // ftok to generate unique key
    key_t key = ftok("shmfile", 65);
 
    // shmget returns an identifier in shmid
    int shmid = shmget(key, 1024, 0666 | IPC_CREAT);
 
    // shmat to attach to shared memory
    char* str = (char*)shmat(shmid, (void*)0, 0);
 
    cout << "Write Data : ";
    cin.getline(str, 1024);
 
    cout << "Data written in memory: " << str << endl;
 
    // detach from shared memory
    shmdt(str);
 
    return 0;
}

OUTPUT :

pritesh@DESKTOP-6DCB34P:~$ g++ W1.cpp
pritesh@DESKTOP-6DCB34P:~$ ./a.out
Write Data : i am at sit
Data written in memory: i am at sit
pritesh@DESKTOP-6DCB34P:~$ g++ R1.cpp
pritesh@DESKTOP-6DCB34P:~$ ./a.out
Data read from memory:i am at sit